{"version":3,"sources":["components/Key/Key.module.scss","components/Container/Container.module.scss","components/Calculator/Calculator.module.scss","components/Keyboard/Keyboard.module.scss","components/Display/Display.module.scss","components/Container/Container.js","store/actions/actionTypes.js","static/keys.js","static/operation-types.js","components/Key/Key.js","store/actions/actions.js","helpers/operations.js","helpers/get-total.js","components/Keyboard/Keyboard.js","helpers/generate-id.js","components/Display/Display.js","components/Calculator/Calculator.js","App.js","store/reducers/reducer.js","index.js"],"names":["module","exports","Container","children","className","classes","container","data-testid","ADD","CLEAR","EQUALS","SELECT_VALUE","SEPARATE","SUBTRACT","keyRoles","DIGIT_KEYS","Array","keys","map","value","role","toString","KEYS","forEach","el","key","find","index","indexOf","movedKey","splice","push","operationTypes","Key","dispatch","useDispatch","classNames","equalsKey","onClick","type","actionTypes","actions","operations","add","a","b","subtract","getPlacesAfterSeparator","string","substring","length","multiply","multiplier","parseFloat","valueIsDecimal","getTotal","string1","string2","operation","placesAfterSeparator","Math","max","pow","multiplied1","multiplied2","getTotalForDecimals","reduce","Keyboard","random","substr","keyboard","Display","displayedText","useSelector","display","Calculator","calculator","App","initialState","firstVal","undefined","secondValProvided","typing","decimal","store","createStore","state","action","total","concatenatedValue","newTyping","newTotal","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c84667c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"key\":\"Key_key__Eu1T1\",\"equalsKey\":\"Key_equalsKey__1gosj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3eZVY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calculator\":\"Calculator_calculator__3E7ly\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"keyboard\":\"Keyboard_keyboard__N58Qi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"display\":\"Display_display__aX7Rf\"};","import classes from './Container.module.scss';\n\nexport const Container = ({ children }) => (\n  <div className={classes.container} data-testid=\"container\">\n    {children}\n  </div>\n);\n","export const ADD = 'ADD';\nexport const CLEAR = 'CLEAR';\nexport const EQUALS = 'EQUALS';\nexport const SELECT_VALUE = 'SELECT_VALUE';\nexport const SEPARATE = 'SEPARATE';\nexport const SUBTRACT = 'SUBTRACT';\n","export const keyRoles = {\n  ADD: 'ADD',\n  CLEAR: 'CLEAR',\n  DIGIT: 'DIGIT',\n  EQUALS: 'EQUALS',\n  SEPARATOR: 'SEPARATOR',\n  SUBTRACT: 'SUBTRACT',\n};\n\nconst KEYS_ORDER = ['7', '8', '9', '+', '4', '5', '6', '-', '1', '2', '3', '=', 'AC', '0', '.'];\n\nconst DIGIT_KEYS = [...Array(10).keys()].map(value => {\n  return {\n    role: keyRoles.DIGIT,\n    value: value.toString(),\n  }\n});\n\nconst KEYS = [\n  ...DIGIT_KEYS,\n  {\n    role: keyRoles.ADD,\n    value: '+',\n  },\n  {\n    role: keyRoles.CLEAR,\n    value: 'AC',\n  },\n  {\n    role: keyRoles.EQUALS,\n    value: '=',\n  },\n  {\n    role: keyRoles.SEPARATOR,\n    value: '.',\n  },\n  {\n    role: keyRoles.SUBTRACT,\n    value: '-',\n  }\n];\n\nKEYS_ORDER.forEach((el) => {\n  const key = KEYS.find(({ value }) => value === el);\n  const index = KEYS.indexOf(key);\n  const movedKey = KEYS.splice(index, 1);\n  KEYS.push(...movedKey);\n});\n\nexport { KEYS };\n","export const operationTypes = {\n  add: 'add',\n  subtract: 'subtract',\n};\n","import { useDispatch } from 'react-redux';\nimport classNames from 'classnames';\nimport classes from './Key.module.scss';\nimport * as actions from '../../store/actions/actions';\nimport { keyRoles } from '../../static';\n\nexport const Key = ({ role, value }) => {\n  const dispatch = useDispatch();\n\n  const handleKeySelection = () => {\n    switch (role) {\n      case keyRoles.ADD:\n        dispatch(actions.add());\n        break;\n      case keyRoles.CLEAR:\n        dispatch(actions.clear());\n        break;\n      case keyRoles.DIGIT:\n        dispatch(actions.selectValue(value));\n        break;\n      case keyRoles.EQUALS:\n        dispatch(actions.equals());\n        break;\n      case keyRoles.SEPARATOR:\n        dispatch(actions.separate());\n        break;\n      case keyRoles.SUBTRACT:\n        dispatch(actions.subtract());\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <button\n      data-testid=\"key\"\n      className={classNames([\n        classes.key,\n        {[`${classes.equalsKey}`]: role === keyRoles.EQUALS }\n      ])}\n      onClick={handleKeySelection}\n    >\n      { value }\n    </button>\n  )\n};\n","import * as actionTypes from '../actions/actionTypes';\n\nexport const add = () => ({ type: actionTypes.ADD });\nexport const clear = () => ({ type: actionTypes.CLEAR });\nexport const equals = () => ({ type: actionTypes.EQUALS });\nexport const selectValue = (value) => ({ type: actionTypes.SELECT_VALUE, value });\nexport const separate = () => ({ type: actionTypes.SEPARATE });\nexport const subtract = () => ({ type: actionTypes.SUBTRACT });\n","export const operations = {\n  add: (a, b) => a + b,\n  subtract: (a, b) => a - b,\n};\n","import { operations } from './operations';\n\nconst getPlacesAfterSeparator = (string) => {\n  const index = string.indexOf('.');\n  return string.substring(index + 1).length;\n};\n\nconst getTotalForDecimals = (string1, string2, operation) => {\n  const placesAfterSeparator = Math.max(getPlacesAfterSeparator(string1), getPlacesAfterSeparator(string2));\n  const multiplier = Math.pow(10, placesAfterSeparator);\n  const multiplied1 = multiply(string1, multiplier);\n  const multiplied2 = multiply(string2, multiplier);\n  return getTotal(multiplied1, multiplied2, operation) / multiplier;\n};\n\nconst multiply = (string, multiplier) => (parseFloat(string) * multiplier);\n\nconst valueIsDecimal = (value) => {\n  const string = value.toString();\n  const { length } = string;\n  const index = string.indexOf('.');\n  return index > -1 && index !== length - 1;\n};\n\nexport const getTotal = (string1, string2, operation) => {\n  if (valueIsDecimal(string1) || valueIsDecimal(string2)) {\n    return getTotalForDecimals(string1, string2, operation);\n  }\n\n  return [parseFloat(string1), parseFloat(string2)]\n    .reduce((a, b) => operations[operation](a, b));\n};\n","import classes from './Keyboard.module.scss';\nimport { Key } from '../Key';\nimport { KEYS } from '../../static';\nimport { generateID } from '../../helpers';\n\nexport const Keyboard = () => {\n  const keys = KEYS.map(({ value, role }) => {\n    return (\n      <Key\n        key={generateID()}\n        role={role}\n        value={value}\n      />\n    );\n  });\n\n  return (\n    <div data-testid=\"keyboard\" className={classes.keyboard}>\n      {keys}\n    </div>\n  )\n};\n","export const generateID = () => `_${Math.random().toString(36).substr(2)}`;\n","import { useSelector } from 'react-redux';\nimport classes from './Display.module.scss';\n\nexport const Display = () => {\n  const displayedText = useSelector(({ displayedText }) => displayedText);\n\n  return (\n    <div\n      data-testid=\"display\"\n      className={classes.display}\n    >\n      {displayedText}\n    </div>\n  );\n};\n","import classes from './Calculator.module.scss';\nimport { Keyboard } from '../Keyboard';\nimport { Display } from '../Display';\n\nexport const Calculator = () => {\n  return (\n    <div className={classes.calculator}>\n      <Display />\n      <Keyboard />\n    </div>\n  );\n};\n","import { Container } from './components/Container';\nimport { Calculator } from './components/Calculator';\n\nexport const App = () => (\n  <Container>\n    <Calculator/>\n  </Container>\n);\n","import * as actionTypes from '../actions/actionTypes';\nimport { getTotal } from '../../helpers';\nimport { operationTypes } from '../../static/operation-types';\n\nconst initialState = {\n  displayedText: '0',\n  firstVal: undefined,\n  secondValProvided: false,\n  operation: undefined,\n  typing: false,\n  decimal: false,\n};\n\nexport const reducer = (state = initialState, action) => {\n  const { displayedText, total, secondValProvided, operation, typing, decimal } = state;\n  const { type, value } = action;\n\n  switch (type) {\n    case actionTypes.SELECT_VALUE:\n      let concatenatedValue;\n      let newTyping;\n      if (displayedText === '0' && value === '0') {\n        concatenatedValue = '0';\n        newTyping = false;\n      } else {\n        concatenatedValue = `${displayedText}${value}`;\n        newTyping = true;\n      }\n\n      return {\n        ...state,\n        typing: newTyping,\n        displayedText: typing ? concatenatedValue : value,\n        secondValProvided: !!operation,\n      };\n\n    case actionTypes.SEPARATE:\n      if (decimal) {\n        return state;\n      }\n      return {\n        ...state,\n        typing: true,\n        decimal: true,\n        displayedText: typing ? `${displayedText}.` : '0.',\n      }\n\n    case actionTypes.ADD:\n      if (secondValProvided) {\n        const newTotal = getTotal(total, displayedText, operation).toString();\n\n        return {\n          ...state,\n          typing: false,\n          total: newTotal,\n          secondValProvided: false,\n          displayedText: newTotal,\n          operation: operationTypes.add,\n          decimal: false,\n        };\n      }\n      return {\n        ...state,\n        typing: false,\n        total: displayedText,\n        operation: operationTypes.add,\n        decimal: false,\n      };\n\n    case actionTypes.SUBTRACT:\n      if (secondValProvided) {\n        const newTotal = getTotal(total, displayedText, operation).toString();\n\n        return {\n          ...state,\n          typing: false,\n          total: newTotal,\n          secondValProvided: false,\n          displayedText: newTotal,\n          operation: operationTypes.subtract,\n          decimal: false,\n        };\n      }\n      return {\n        ...state,\n        typing: false,\n        total: displayedText,\n        operation: operationTypes.subtract,\n        decimal: false,\n      };\n\n    case actionTypes.EQUALS:\n      if (!secondValProvided) {\n        return state;\n      }\n\n      const newTotal = getTotal(total, displayedText, operation).toString();\n      return {\n        ...state,\n        typing: false,\n        total: newTotal,\n        secondValProvided: false,\n        displayedText: newTotal,\n        operation: undefined,\n        decimal: false,\n      };\n\n    case actionTypes.CLEAR:\n      return initialState;\n\n    default:\n      return state;\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport './styles/index.scss';\nimport { App } from './App';\nimport { reducer } from './store/reducers/reducer';\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}